{"version":3,"file":"static/js/735.a3e5b944.chunk.js","mappings":"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","sources":["common/Button/styles.ts","common/Button/index.tsx","common/Carousel/image-carousel.tsx","components/ProjectsBlock/styles.ts","components/ProjectsBlock/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledButton = styled(\"button\")<{ color?: string }>`\r\n  background: ${(p) => p.color || \"#2e186a\"};\r\n  color: ${(p) => (p.color ? \"#2E186A\" : \"#fff\")};\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  width: 100%;\r\n  border: 1px solid #edf3f5;\r\n  border-radius: 4px;\r\n  padding: 13px 0;\r\n  cursor: pointer;\r\n  margin-top: 0.625rem;\r\n  max-width: 180px;\r\n  transition: all 0.3s ease-in-out;\r\n  box-shadow: 0 16px 30px rgb(23 31 114 / 20%);\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    color: #fff;\r\n    border: 1px solid rgb(255, 130, 92);\r\n    background-color: rgb(255, 130, 92);\r\n  }\r\n`;\r\n","import { StyledButton } from \"./styles\";\r\nimport { ButtonProps } from \"../types\";\r\n\r\nexport const Button = ({ color, children, onClick }: ButtonProps) => (\r\n  <StyledButton color={color} onClick={onClick}>\r\n    {children}\r\n  </StyledButton>\r\n);\r\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { SvgIcon } from \"../SvgIcon\"; // Assuming your SvgIcon component works for local SVGs\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\"; // Using Ant Design icons\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n// Custom Previous Arrow\nconst PrevArrow = (props: any) => {\n    const { className, style, onClick } = props;\n    return (\n        <div\n            className={className}\n            style={{\n                ...style,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                left: \"-0px\",\n                zIndex: 1,\n                width: \"40px\",\n                height: \"40px\",\n                backgroundColor: \"#18216d\", // Dark background\n                borderRadius: \"50%\",\n            }}\n            onClick={onClick}\n        >\n\n        </div>\n    );\n};\n\n// Custom Next Arrow\nconst NextArrow = (props: any) => {\n    const { className, style, onClick } = props;\n    return (\n        <div\n            className={className}\n            style={{\n                ...style,\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                right: \"-0px\",\n                zIndex: 1,\n                width: \"40px\",\n                height: \"40px\",\n                backgroundColor: \"#18216d\", // Dark background\n                borderRadius: \"50%\",\n            }}\n            onClick={onClick}\n        >\n\n        </div>\n    );\n};\n\n// Slider settings\nconst settings = {\n    dots: true,\n    lazyLoad: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    initialSlide: 0,\n    arrows: true,\n    prevArrow: <PrevArrow />,\n    nextArrow: <NextArrow />,\n};\n\n// Main Component\nconst ImageCarousel = ({ images }: { images: string[] }) => {\n    // If only one image, return SvgIcon directly\n    if (images.length === 1) {\n        return <SvgIcon src={images[0]} width=\"100%\" height=\"100%\" />;\n    }\n\n    // Else, return slider\n    return (\n        <Slider {...settings}>\n            {images.map((src, idx) => (\n                <div key={idx} >\n                    <SvgIcon src={src} width=\"84%\" height=\"600px\" />\n                </div>\n            ))}\n        </Slider>\n    );\n\n};\n\nexport default ImageCarousel;\n","import styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled.section`\r\n  padding: 4rem 0;\r\n`;\r\n\r\nexport const ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1.25rem;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  margin-bottom: 0.5rem;\r\n  color: #222;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  line-height: 2;\r\n  color: #555;\r\n`;\r\n\r\nexport const TechWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.75rem;\r\n`;\r\n\r\nexport const TechBadge = styled.div`\r\n  width: 60px;\r\n  height: 60px;\r\n  background:rgba(243, 244, 246, 0.15);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);\r\n  transition: background 0.2s ease;\r\n\r\n  img {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n\r\n  &:hover {\r\n    background: #e5e7eb;\r\n  }\r\n`;\r\n\r\nexport const GitHubLink = styled.a`\r\n  display: inline-block;\r\n  margin-top: 1.5rem;\r\n  padding: 0.6rem 1.5rem;\r\n  background: #24292e;\r\n  color: white;\r\n  border-radius: 30px;\r\n  font-size: 0.95rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  transition: background 0.3s ease;\r\n\r\n  &:hover {\r\n    background: #000;\r\n  }\r\n`;\r\n\r\nexport const ModulesWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  margin-top: 1rem;\r\n\r\n  a {\r\n    color: #0366d6;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n    transition: color 0.3s ease;\r\n\r\n    &:hover {\r\n      color: #023e8a;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SectionWrapper = styled.div`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n\r\n  h4 {\r\n    margin: 0;\r\n    color: #333;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n    color: #555;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  display: flex;\r\n  gap: 1rem;\r\n  margin-top: 1.5rem;\r\n`;\r\n\r\nexport const GithubRepoWrapper = styled.div`\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  gap: 1rem;\r\n`;\r\n\r\nexport const RepoMain = styled.a`\r\n  font-size: 1.1rem;\r\n  font-weight: 600;\r\n  padding: 0.8rem 1.6rem;\r\n  background: #24292e;\r\n  color: white;\r\n  border-radius: 50px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  transition: background 0.3s ease;\r\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\r\n\r\n  &:hover {\r\n    background: #000;\r\n  }\r\n`;\r\n\r\nexport const RepoModules = styled.div`\r\n  margin-left: 2rem; /* to indicate hierarchy under main repo */\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 1.5rem;\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: -1.5rem;\r\n    top: 0.5rem;\r\n    bottom: 0.5rem;\r\n    width: 2px;\r\n    background: #d1d5db;\r\n  }\r\n`;\r\n\r\nexport const ModuleItem = styled.div`\r\n  a {\r\n    padding: 0.5rem 1.2rem;\r\n    border-radius: 30px;\r\n    background: #f3f4f6;\r\n    color: #0366d6;\r\n    text-decoration: none;\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover {\r\n      background: #e5e7eb;\r\n      color: #023e8a;\r\n    }\r\n  }\r\n`;\r\n","import { Row, Col, Tooltip } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport {\r\n  ContentSection,\r\n  ContentWrapper,\r\n  Title,\r\n  Description,\r\n  TechBadge,\r\n  TechWrapper,\r\n  GitHubLink,\r\n  ButtonWrapper,\r\n  ModulesWrapper,\r\n  SectionWrapper,\r\n  GithubRepoWrapper, RepoMain, RepoModules, ModuleItem,\r\n} from \"./styles\";\r\nimport ImageCarousel from \"../../common/Carousel/image-carousel\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\n\r\nconst ProjectsBlock = ({\r\n  images,\r\n  title,\r\n  content,\r\n  github_url,\r\n  modules,\r\n  technologies,\r\n  section,\r\n  button,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const scrollTo = (id: string) => {\r\n    const element = document.getElementById(id) as HTMLDivElement;\r\n    element.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <ContentSection id={id}>\r\n      <Fade direction={direction} triggerOnce>\r\n        <Row\r\n          gutter={[32, 32]}\r\n          align=\"middle\"\r\n          justify=\"center\"\r\n          style={{ flexDirection: direction === \"left\" ? \"row\" : \"row-reverse\" }}\r\n        >\r\n          {/* Image */}\r\n          <Col lg={11} md={24} sm={24} xs={24}>\r\n            <ImageCarousel images={images} />\r\n          </Col>\r\n\r\n          {/* Content */}\r\n          <Col lg={11} md={24} sm={24} xs={24}>\r\n            <ContentWrapper>\r\n              <Title>{t(title)}</Title>\r\n              <Description>{t(content)}</Description>\r\n\r\n              {/* Tech Stack */}\r\n              {technologies && technologies.length > 0 && (\r\n                <Col>\r\n                  <Description>Technologies:</Description>\r\n                  <TechWrapper>\r\n                    {technologies.map((tech, index) => (\r\n                      <Tooltip title={tech.name} key={index}>\r\n                        <TechBadge>\r\n                          <SvgIcon src={tech.icon} width=\"90%\" height=\"60%\" />\r\n                        </TechBadge>\r\n                      </Tooltip>\r\n                    ))}\r\n                  </TechWrapper>\r\n                </Col>\r\n              )}\r\n\r\n\r\n              {/* GitHub Links */}\r\n              <GithubRepoWrapper>\r\n                {modules && modules.length > 0 && (\r\n                  <RepoModules>\r\n                    {modules.map((mod, idx) => (\r\n                      <ModuleItem key={idx}>\r\n                        <a href={mod.github_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          📦 {mod.title}\r\n                        </a>\r\n                      </ModuleItem>\r\n                    ))}\r\n                  </RepoModules>\r\n                )}\r\n              </GithubRepoWrapper>\r\n\r\n\r\n              {/* Additional Sections (Optional) */}\r\n              {section && (\r\n                <SectionWrapper>\r\n                  {section.map((item, idx) => (\r\n                    <div key={idx}>\r\n                      <h4>{t(item.title)}</h4>\r\n                      <p>{t(item.content)}</p>\r\n                    </div>\r\n                  ))}\r\n                </SectionWrapper>\r\n              )}\r\n\r\n              {/* Call to Action Buttons */}\r\n              {button && (\r\n                <ButtonWrapper>\r\n                  {button.map((item, idx) => (\r\n                    <Button key={idx} color={item.color} onClick={() => scrollTo(\"contact\")}>\r\n                      {t(item.title)}\r\n                    </Button>\r\n                  ))}\r\n                </ButtonWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </Row>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ProjectsBlock);\r\n"],"names":["StyledButton","styled","p","color","Button","_ref","children","onClick","_jsx","PrevArrow","props","className","style","display","alignItems","justifyContent","left","zIndex","width","height","backgroundColor","borderRadius","NextArrow","right","settings","dots","lazyLoad","infinite","speed","slidesToShow","slidesToScroll","initialSlide","arrows","prevArrow","nextArrow","images","length","SvgIcon","src","Slider","map","idx","ContentSection","section","ContentWrapper","div","Title","h3","Description","TechWrapper","TechBadge","SectionWrapper","a","ButtonWrapper","GithubRepoWrapper","RepoModules","ModuleItem","withTranslation","title","content","github_url","modules","technologies","button","t","id","direction","Fade","triggerOnce","_jsxs","Row","gutter","align","justify","flexDirection","Col","lg","md","sm","xs","ImageCarousel","tech","index","Tooltip","name","icon","mod","href","target","rel","item","document","getElementById","scrollIntoView","behavior","scrollTo"],"sourceRoot":""}